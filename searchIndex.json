[
{
		"title": "DIY FT-817  Data Cable",
		"date":"Mon Mar 10 2025 05:51:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/Blogs/DIY-FT-817-DATA-Cable/",
		"content": "DIY FT-817 数据电缆\n为了在FT-817上更方便地玩FT8，我做了一根DATA电脑连接线。配合以前买的一根写频线控制FT-817的PTT，整个系统工作的很顺溜。连接线的制作方法很简单，主要材料是一根标准MD6的线，两个立体声插头，一个USB声卡，直接连到一起就搞定。\n关于FT-817的DATA接口\n这个DATA接口，它的名字叫“数据”，其实是通过音频电平、也就是音量，来跟其它设备进行信号传递的一种接口。这是一个彻头彻脑的“音频”设备。\nFT8用AFSK模式调制信号。AFSK是音频的频移键控。电台收发的是一种音频调制信号。这个声音通过电缆传送到电脑声卡里，再用的wsjt-x这类软件解调、播放声音，这个体系就是这样工作起来的。\n我要做的这根线，就是电台到电脑的这段连接电缆。\n材料清单\n\n一根Mini-Din 6（MD6）的标准连接线 这跟键盘鼠标用的PS/2线接口完全一样。但是PS/2键盘鼠标线大多数省略了2、6两根连线，对于DATA输入输出来说缺了接地线。所以一定要买一根标准的MD6连接线。\n一个USB声卡(带3.5mm的音频输入输出） 这是为了把FT8的音频信号，跟系统其它软件的音效彻底隔离开。况且我这个2015年的MBP也没有音频输入接口了，只能靠电脑的内置麦克风“听”旁边电台的声音。\n两个3.5mm立体声插头\n一根FT-817的ACC控制线 如果你想让电脑来自主控制电台的信号收发，就需要这根线。这是一根USB转TTL的编程线、写频线，最早买来是为了给817写频用的，PL-2302芯片的。\n最后在准备一些磁环，套在做好的线两端，用来抑制杂散信号的干扰。\n\nFT-817的DATA接口\n在FT-817手册的第38/41页，有两张图，说明了DATA接口的连线方案。FT8使用的是AFSK调制模式，只用到了DATA接口的1200bps的针脚接口。所以参考38页那个也行。下边这个是41页那张图，说明了DATA接口所有的定义和连接方式。\n\nMD6接口的定义：\n\n插座正面图\n\n连线的时候要注意，对应的是插座正面的镜像标准画法反面图的针脚应该是黑色的圆点，表示是针\n\n下边这张对照表，对应了DATA针脚定义、YAESU的CT-39A连接线的线束颜色、我买的MD6的线束颜色、3.5mm立体声接头的接线对照表。我没买CT-39A，我买的那个MD6线的颜色也不是标准的。所以要用万用表一个个测量，对应出每个针脚的位置。\n\n针脚\n标签\nCT-39A\n我的MD6线的颜色\n声卡接线方式\n\n1\nPKD\n褐色\n蓝色\nLine Out / Green\n\n2\nGND\n红色\n紫色\nLine I/O GND\n\n3\nPTT\n橙色\n黄色\n空\n\n4\nRX9600\n黄色\n白色\n空\n\n5\nRX1200\n绿色\n黑色\nLine In / Red\n\n6\nPKS(SQL)\n蓝色\n褐色\n空\n\n关于声卡的技术参数\n网上有一些成品化的连接器方案。比如使用了音频隔离变压器、光偶合的ACC控制电路。我这个主要还是因为只在QRP设备上用，没考虑太多。但是咨询了卖家这个USB声卡的参数，得到了一些参考数据。\n这是绿联的US205 USB声卡，用的是HS-100B芯片的USB声卡方案，据卖家讲：\n\nLine-OUT：负载16Ω，功率可达60mW。所以我推算峰值输出电压不高于980mV\nMIC-IN：输入57mV，输出功率是0dBFS，失真小于0.02，当超过57mV时，失真就会开始急剧加大；最大输入可达到125mV，输入功率为2dBFS，失真24%\nMIC-IN：输入57mV，输出功率是0dBFS，失真小于0.02，当超过57mV时，失真就会开始急剧加大；最大输入可达到125mV，输入功率为2dBFS，失真24%\n\n在FT-817的DATA接口的电压指标是这样的：\n\n封包数据输入（对应声卡的Line-OUT）：阻抗10 kΩ；最大输入电压40 mVpp 用于 1200 bps；2.0 Vpp 用于 9600 bps\n1200 bps 封包数据输出（对应声卡的MIC-IN）：阻抗10 kΩ，最大输出电压300 mVpp\n\n所以，在音频方面，个人感觉：\n\n发射时，把USB声卡的音量降低，可以降低输出电压，观察系统的Audio MIDI Setup，降到-29dB左右，可以匹配到817的信号输入电压。具体表现还是要观察ALC电平指示，4-5格就不错了。\n接收时，因为817的DATA接口提供的输出功率是固定的，所以显然大于USB声卡最佳电压两三倍了，按客服说的“信号失真24%”了。不过这对于FT8来说还能接受吧。在接收本地电台的FT8时、还有信噪比很高的信号时，瀑布上总是有附近频率产生的干扰信号，可能就是这个失真带来的问题吧。\n\n我在各种线上都加了磁环，这套线目前性能稳定。我也担心传说中的烧817的话题，买个连接盒子还是更好些。\n\n接收时，因为817的DATA接口提供的输出功率是固定的，所以显然大于USB声卡最佳电压两三倍了，按客服说的“信号失真24%”了。不过这对于FT8来说还能接受吧。在接收本地电台的FT8时、还有信噪比很高的信号时，瀑布上总是有附近频率产生的干扰信号，可能就是这个失真带来的问题吧。。\n\n我在各种线上都加了磁环，这套线目前性能稳定。我也担心传说中的烧817的话题，买个连接盒子还是更好些。\nBTW：观察系统的Audio MIDI Setup，降到-29dB左右，这段我也不确定效果如何，因为最终我发现USB声卡音量从大到小，FT-817的ALC电平几乎没变化。而且我FT-817上DIG MIC、SSB MIC、PSK MIC 的设置，都是默认的50，发射起来ALC很稳定，四、五格。这可能跟我加了磁环有关系？",
		"tags": [ "note","ham","FT8","daily","FT-817"]
},

{
		"title": "Depoly Obsidian Digital Garden on Github Pages",
		"date":"Mon Mar 10 2025 05:51:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/Docs/Depoly-Obsidian-Digital-Garden-on-Github-Pages/",
		"content": "[!NOTE]\n#ODG : Obsidian Digital Garden, in short.\n\n前言\n在ChatGPT协助下，我成功在Github Pages上直接部署了Obsidian Digital Garden插件的网站。\n该页面提供了一个基于 GitHub Actions 的部署策略示例，用于将 Obsidian 文档自动构建并发布到 GitHub Pages 的 gh-pages 分支上，无需依赖 Vercel 或 Netlify。\n\n自动触发构建：当 src/site/** 目录下有新增或修改文件时。\n部署目标：gh-pages 分支\n使用 Node.js 16 运行构建命令\n部署工具：peaceiris/actions-gh-pages、node.js\n尽管ODG是基于 #11ty 构建的，但是不要从11ty安装，要用 node.js包安装。这样才能保证部署了全部的插件。\n\n下面给出一个基于 GitHub Actions 的最新部署策略示例，满足如下要求：\n\n生成器代码保留在 main 分支；\n当 src 目录下有新增或修改文件时，自动触发构建并将生成的静态文件发布到 gh-pages 分支；\n完全基于 GitHub Pages 部署，不依赖 Vercel 或 Netlify。\n\n部署避坑\n\n一般情况下，不必自己创建gh-pages分支，代码中有Action的workflow脚本，部署之后可成功自行创建gh-pages分支。\n如果在本地的Obsidian里移动了笔记文件的位置，在发布后，老的md文件很可能仍然会存在main分支的 /src/site/notes里原有的位置。当定义了“永久链接”时，会引发11ty的重名文件冲突，导致Action的deploy动作失败。通常情况下一定之后要去github上找到老的删掉。\n相关话题：为了保证URL可读性，使用中文名字做笔记名时，可以添加dg-path或者dg-permalink，定一个英文名，让页面渲染时产生一个英文的URL。\n在Obsidian里修改ODG插件的设置，要在下一次发布时触发了Action重新Deploy时才会生效。\n\n示例 GitHub Actions Workflow\n在仓库 main 分支下创建目录 .github/workflows，并新建文件（例如 deploy.yml），文件内容如下：\nname: Deploy ODG Site to GitHub Pages\n\npermissions:\ncontents: write\n\non:\npush:\nbranches:\n- main\npaths:\n- 'src/site/**'\n\njobs:\ndeploy:\nruns-on: ubuntu-22.04\n\nsteps:\n# 1. 检出代码\n- name: Checkout code\nuses: actions/checkout@v3\nwith:\nfetch-depth: 0\n\n# 2. 设置 Node.js 环境（可根据需要调整版本）\n- name: Setup Node.js\nuses: actions/setup-node@v3\nwith:\nnode-version: '22'\n\n# 3. 安装依赖\n- name: Install dependencies\nrun: npm install\n\n# 4. 构建静态站点（不要用11ty部署，要用npm部署整个包，因为ODG有自定义的打包插件）\n- name: Build ODG Site with npm\nrun: npm run build --if-present\n\n# 5. 部署生成的 dist 目录到 gh-pages 分支\n- name: Deploy to GitHub Pages\nuses: peaceiris/actions-gh-pages@v3\nwith:\ngithub_token: ${{ secrets.GITHUB_TOKEN }}\npublish_dir: ./dist\npublish_branch: gh-pages\n\n说明\n\n触发条件\n上述工作流配置在 main 分支中监控 src 目录的所有变化（src/**）。每当有文件添加或修改时，工作流将自动触发。\n\n构建步骤\n\n使用 actions/checkout 检出最新代码。\n设置 Node.js 环境（此处选择了 Node.js 16，可根据实际需求调整）。\n通过 npm install 安装依赖，并运行 npm run build 生成静态文件，假设生成目录为 dist。如果你的项目生成目录不是 dist，请相应调整 publish_dir 的路径。\n\n部署步骤\n使用 peaceiris/actions-gh-pages 部署生成的文件到 gh-pages 分支。部署时利用内置的 ${{ secrets.GITHUB_TOKEN }} 自动进行认证，无需额外设置。\n\n仓库配置\n部署成功后，请确保在 GitHub 仓库设置中，GitHub Pages 的来源选择为 gh-pages 分支，以便正确显示你的 Obsidian Digital Garden。\n\n通过以上配置，Obsidian 文档将从 main 分支的 src 目录自动构建，并利用最新的 GitHub Actions 部署策略发布到 GitHub Pages 的 gh-pages 分支上。这样就实现了一个纯 GitHub Pages 的自动部署流程，无需依赖第三方平台。\n404问题解决\n如果部署之后出现 404 页面可能有以下几个原因，你可以逐项排查和解决：\n\nGitHub Pages 源设置\n\n请确认仓库的 GitHub Pages 配置中，Source 选项已正确设置为 gh-pages 分支的根目录。如果曾经部署过其他目录（例如 /src/site），可能会导致配置残留。你可以进入仓库设置 → Pages，检查并确保“发布来源”设置为 gh-pages 分支的根目录。\n\n分支内容是否正确\n\n根据最新配置，Eleventy 构建生成的静态文件位于 dist 目录，并通过 Action 部署到 gh-pages 分支。请确认 gh-pages 分支根目录下是否存在正确的 index.html 文件以及其他必要的资源。你可以直接在 GitHub 仓库的 gh-pages 分支中查看构建输出文件。如果旧的部署曾将整个 main 分支内容推送过来，可能需要清理 gh-pages 分支后再重新部署。\n建议先备份当前内容，然后删除 gh-pages 分支，再通过 GitHub UI 或命令行创建一个空的 gh-pages 分支，再重新触发 Action 部署。\n\n浏览器缓存问题\n\n有时浏览器缓存可能导致显示 404 页面，建议尝试强制刷新页面（例如使用 Ctrl+F5 或清除缓存）来查看最新状态。\n强烈推荐用浏览器的“无痕模式”调试前端页面。\n\n自定义域名及 DNS 配置\n\n如果你设置了自定义域名，也请确认 DNS 记录正确，并且 GitHub Pages 的 CNAME 文件（如果使用）已正确配置。\n\n综上建议：\n\n检查 GitHub Pages 设置，确保使用 gh-pages 分支根目录。\n确认 gh-pages 分支内容为 Eleventy 生成的 dist 文件内容（包含 index.html）。\n清理可能的旧缓存，必要时重新创建 gh-pages 分支再触发部署。\n如果使用自定义域名，请检查 DNS 配置。\n\n按照这些步骤排查后，再观察前端页面是否能正确加载。",
		"tags": ["ODG", "11ty", "note","clippings","github-pages","github","11ty","ODG","nodejs"]
},

{
		"title": "Welcome to BG6LH's Digital Garden",
		"date":"Mon Mar 10 2025 05:51:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/",
		"content": "欢迎来到 BG6LH 的 Digtal Garden\n\n这是一个新的开始，我正在使用Obsidian建立我的个人知识库，并且用上了AI，管理、建设我的本地化知识体系，包括我的工作、及爱好\n这些年，我玩业余无线电的心得，大多数都发布在我的微信公众号上\n但是微信公众号是一个封闭的体系，对搜索额引擎和AI世界很不友好\n我会逐渐把一些文章搬回到我的这个小花园里\n顺便把一些当时留下的错误信息纠正过来\n\n2025-03-08 BG6LH",
		"tags": [ "note","gardenEntry"]
}
]